rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
    	allow read, write: if false;
    }
  
  	match /projects/{projectName} {
    	allow get;
      allow read: if isAdmin();
      allow write: if isAdmin() && canWrite();
      //allow read, write: if isProjectOwner(request.auth.uid, projectName) || isAdmin();
    
      match /conversations/{cid} {
        allow create, update;
        allow read, write: if isAdmin();
        //allow read, write: if isProjectOwner(request.auth.uid, projectName) || isAdmin();
      }
  	}
  
  	match /users/{uid} {
    	allow read, write: if request.auth.uid == uid || isAdmin();
    }
    
    match /redirections/{redir} {
    	allow create, update;
      allow read, write: if isAdmin();
    }
    
    match /coverage/{site} {
    	allow create, update;
      allow read, write: if isAdmin();
    }
        
    // TODO - add this to the database
    function isAdmin() {
    	return request.auth.uid == "5VuJbHtKebdwXLcPNbIJpzwZHZo2";
    }
    
    function canWrite() {
    	return resource == null ||
      				resource.data.readonly == null ||
      				resource.data.readonly == false;
    }
    
    //match /conversations/{conversation} {
    //	allow create;
    //  allow read, update, delete: if false;
    //}
    
    //function isProjectOwner(uid, projectName) {
    //	return projectName in projectsOwned(uid);
    //}
    
    //function projectsOwned(uid) {
    //	return get(/databases/$(database)/documents/users/$(uid)).data.projects;
    //}
  }
}